{
	// Place your MediaFetcher workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
	// Placeholders with the same ids are connected.
	// Example:
	"Create a new React functional component": {
		"scope": "typescript,typescriptreact",
		"prefix": "react-fc",
		"body": [
			"import React, { useState, useEffect } from 'react';",

			"interface $1Props {",
			"    Parameter1: string;",
			"}",
			"$0",
			"const $1: React.FC<$1Props> = ({ Parameter1 }) => {",
			"    const [loading, setLoading] = useState<boolean>(false);",
			"    const renderModalType = (): JSX.Element => {",
			"        return <></>;",
			"      };",
			"",
			"  return (",
			"    <div>",
			"    </div>",
			"  );",
			"};",
			"",
			"export default $1;"
		],
		"description": "Create a new React functional component"
	}
}